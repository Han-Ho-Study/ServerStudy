## 데이터 레이스 or 경쟁 상태
- 두 스레드가 데이터에 접근해 상태를 예측할 수 없게하는 것

## 1.5 스레드 다룰 때 주의사항
- 덤프나고 있는 것 설명
- vector<Texture*> list, set<Texture*> set;
set.insert( list[index] );


### 궁금한 점
* DB의 경우 Must로 구현되는데, 
Must 스레드가 2개 이상일 경우 동시에 DB 호출이 될 때도 있을 건데
트랜잭션에 의해서 락 컨트롤을 하는건가?

* 신작에서 list를 안쓰는 이유?

절대 건드리지 않도록하는 원자성, 이 덕분에 일관성 -> 이 조치들을 통칭해 동기화
대표적인게 임계 영역과 뮤텍스(또는 상호 배제라고도 함), 잠금(lock, 락) 기법입니다.
## 어디에 나눠 쓰는지?
